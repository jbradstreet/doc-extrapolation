{"version":3,"sources":["api/create/create.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAI,eAAe,0BAAnB;;;AAGA,aAAa,eAAb,CAA6B,CAA7B;;;AAGA,IAAI,SAAS;AACX,UAAQ,MADG;AAEX,YAAU;AAFC,CAAb;;;AAMA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,mBAAO,MAAP,CAAc,IAAd,CAAmB,CAAnB,EAAsB,UAAU,KAAV,CAAtB;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc;AACnB,iBAAa,IAAb,CAAkB,QAAQ,GAAR,GAAc,IAAI,GAApC,EAAyC,GAAzC;AACA,iBAAa,IAAb,CAAkB,KAAlB,EAAyB,GAAzB;AACD,GAHD;AAID;;kBAEc,Y","file":"api/create/create.events.js","sourcesContent":["/**\n * Create model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Create from './create.model';\nvar CreateEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nCreateEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'save': 'save',\n  'remove': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Create.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    CreateEvents.emit(event + ':' + doc._id, doc);\n    CreateEvents.emit(event, doc);\n  }\n}\n\nexport default CreateEvents;\n"],"sourceRoot":"/source/"}